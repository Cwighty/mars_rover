name: Release to prod

on:
  push:
    branches:
    - main

env:
  WEBAPP_NAME: snow-rover
  RESOURCE_GROUP: mars_rover
  SLOT_NAME: staging  # Create a slot on your web app called "staging"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'
          include-prerelease: true
        
      - name: Run Tests
        working-directory: src
        run: dotnet test                  

      - name: Build with dotnet
        working-directory: src
        run: dotnet build --configuration Release

      - name: dotnet publish
        working-directory: src/Mars.Web
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp
    
  deploy-to-stage:
    name: Deploy to staging
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: 'Staging'
      url: ${{ steps.deploy-to-stage.outputs.webapp-url }}

    steps:
    - name: Log into Azure CLI with service principal
      uses: azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: .net-app
    
    - name: Deploy to stage env
      uses: azure/webapps-deploy@v2
      id: deploy-to-stage
      with: 
        app-name: ${{ env.WEBAPP_NAME }}
        slot-name:  ${{ env.SLOT_NAME }}
        #publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_235E84DC2BA04B6B81C410EA17587A4D }}
        package: .

  release-to-prod:
    name: Release to prod
    needs: deploy-to-stage
    runs-on: ubuntu-latest
    environment:
      name: 'Production'
      url: 'https://${{ env.WEBAPP_NAME }}.azurewebsites.net/'

    steps:
    - name: Log into Azure CLI with service principal
      uses: azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Swap slots
      run: az webapp deployment slot swap -s ${{ env.SLOT_NAME }} -n ${{ env.WEBAPP_NAME }} -g ${{ env.RESOURCE_GROUP }}
