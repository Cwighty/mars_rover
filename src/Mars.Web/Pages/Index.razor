@page "/"
@using System.Collections.Concurrent;
@using Microsoft.AspNetCore.RateLimiting;
@attribute [DisableRateLimiting]
@inject MultiGameHoster multiGameHoster
@inject NavigationManager navManager

<div class="container">
    <h1>2023 Coding Challenge - Mars Rover</h1>

    <h3>Join an Existing Game</h3>
    <div class="row">
        @if (multiGameHoster.Games.Any())
        {
            @foreach (var game in multiGameHoster.Games.OrderBy(g => g.Value.CreatedOn))
            {
                <div class="row">
                    <p>
                        ➡️ <a href=@($"/game/{game.Key}")>Game '@game.Key'</a><span> (created @(
                    game.Value.CreatedOn.ToString("g")
                    ))</span>
                    </p>
                </div>
            }
        }
        else
        {
            <p>No existing games to join...</p>
        }
    </div>
    <h3 class="mt-5">Make your own game</h3>
    <div class="row">
        <div class="col-auto">
            <button class="btn btn-primary" @onclick=makeNewGame>Make a new game</button>
        </div>
    </div>
</div>

@code {
    protected override void OnAfterRender(bool firstRender)
    {
        if (multiGameHoster.Games.Count == 0)
        {
            makeNewGame();
        }

        multiGameHoster.OldGamesPurged += (_, _) => InvokeAsync(()=> StateHasChanged());
    }

    void makeNewGame()
    {
        var gameId = multiGameHoster.MakeNewGame();
        navManager.NavigateTo($"/game/{gameId}");
    }
}
