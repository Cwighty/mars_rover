@inject GameManager gameManager
@inject GameStartOptions startOptions
@inject IConfiguration config
@using Microsoft.Extensions.DependencyInjection.Extensions

@if (isOpen || true)
{
    <div class="modal" id="optionsModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title">New Game</h3>
                </div>
                <div class="modal-body">
                    <div class="form-floating mb-3">
                        <input class="form-control" type="number" id="width" placeholder="width" @bind=startOptions.Width />
                        <label for="width">Width</label>
                    </div>
                    <div class="form-floating mb-3">
                        <input class="form-control" type="number" id="height" placeholder="height" @bind=startOptions.Height />
                        <label for="height">Height</label>
                    </div>
                    <div class="form-floating mb-3">
                        <input class="form-control" type="password" id="password" placeholder="what's the magic word?" @bind=password />
                        <label for="password">Password</label>
                </div>
                    @if(error != null)
                    {
                        <p class="error-text">@error</p>
                    }
                </div>
                <div class="modal-footer">
                    <div class="col-auto">
                        <button class="btn btn-link" type="button" data-bs-dismiss="modal" @onclick=makeNewGame>Start New Game</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <button type="button" class="btn btn-link" style="margin-right: -12px" data-bs-toggle="modal" data-bs-target="#optionsModal">New Game</button>
}


@code {
    bool isOpen = false;
    string password;
    string error;
    string modalClass = "modal";

    void makeNewGame()
    {
        gameManager.StartNewGame(startOptions);
        isOpen = false;
    }

    void toggleOpenState() => isOpen = !isOpen;
}
